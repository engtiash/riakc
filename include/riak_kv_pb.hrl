%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.26.4

-ifndef(riak_kv_pb).
-define(riak_kv_pb, true).

-define(riak_kv_pb_gpb_version, "3.26.4").

-ifndef('RPBLINK_PB_H').
-define('RPBLINK_PB_H', true).
-record(rpblink,
        {bucket                 :: binary() | undefined, % = 1
         key                    :: binary() | undefined, % = 2
         tag                    :: binary() | undefined % = 3
        }).
-endif.

-ifndef('RPBPAIR_PB_H').
-define('RPBPAIR_PB_H', true).
-record(rpbpair,
        {key                    :: binary(),        % = 1
         value                  :: binary() | undefined % = 2
        }).
-endif.

-ifndef('RPBCONTENT_PB_H').
-define('RPBCONTENT_PB_H', true).
-record(rpbcontent,
        {value                  :: binary(),        % = 1
         content_type           :: binary() | undefined, % = 2
         charset                :: binary() | undefined, % = 3
         content_encoding       :: binary() | undefined, % = 4
         vtag                   :: binary() | undefined, % = 5
         links = []             :: [#rpblink{}],    % = 6
         last_mod               :: non_neg_integer() | undefined, % = 7, 32 bits
         last_mod_usecs         :: non_neg_integer() | undefined, % = 8, 32 bits
         usermeta = []          :: [#rpbpair{}],    % = 9
         indexes = []           :: [#rpbpair{}],    % = 10
         deleted                :: boolean() | 0 | 1 | undefined, % = 11
         ttl                    :: non_neg_integer() | undefined % = 12, 32 bits
        }).
-endif.

-ifndef('RPBGETRESP_PB_H').
-define('RPBGETRESP_PB_H', true).
-record(rpbgetresp,
        {content = []           :: [#rpbcontent{}], % = 1
         vclock                 :: binary() | undefined, % = 2
         unchanged              :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('RPBINDEXOBJECT_PB_H').
-define('RPBINDEXOBJECT_PB_H', true).
-record(rpbindexobject,
        {key                    :: binary(),        % = 1
         object                 :: #rpbgetresp{}    % = 2
        }).
-endif.

-ifndef('RPBMODFUN_PB_H').
-define('RPBMODFUN_PB_H', true).
-record(rpbmodfun,
        {module                 :: binary(),        % = 1
         function               :: binary()         % = 2
        }).
-endif.

-ifndef('RPBCOMMITHOOK_PB_H').
-define('RPBCOMMITHOOK_PB_H', true).
-record(rpbcommithook,
        {modfun                 :: #rpbmodfun{} | undefined, % = 1
         name                   :: binary() | undefined % = 2
        }).
-endif.

-ifndef('RPBBUCKETPROPS_PB_H').
-define('RPBBUCKETPROPS_PB_H', true).
-record(rpbbucketprops,
        {n_val                  :: non_neg_integer() | undefined, % = 1, 32 bits
         allow_mult             :: boolean() | 0 | 1 | undefined, % = 2
         last_write_wins        :: boolean() | 0 | 1 | undefined, % = 3
         precommit = []         :: [#rpbcommithook{}], % = 4
         has_precommit = false  :: boolean() | 0 | 1 | undefined, % = 5
         postcommit = []        :: [#rpbcommithook{}], % = 6
         has_postcommit = false :: boolean() | 0 | 1 | undefined, % = 7
         chash_keyfun           :: #rpbmodfun{} | undefined, % = 8
         linkfun                :: #rpbmodfun{} | undefined, % = 9
         old_vclock             :: non_neg_integer() | undefined, % = 10, 32 bits
         young_vclock           :: non_neg_integer() | undefined, % = 11, 32 bits
         big_vclock             :: non_neg_integer() | undefined, % = 12, 32 bits
         small_vclock           :: non_neg_integer() | undefined, % = 13, 32 bits
         pr                     :: non_neg_integer() | undefined, % = 14, 32 bits
         r                      :: non_neg_integer() | undefined, % = 15, 32 bits
         w                      :: non_neg_integer() | undefined, % = 16, 32 bits
         pw                     :: non_neg_integer() | undefined, % = 17, 32 bits
         dw                     :: non_neg_integer() | undefined, % = 18, 32 bits
         rw                     :: non_neg_integer() | undefined, % = 19, 32 bits
         basic_quorum           :: boolean() | 0 | 1 | undefined, % = 20
         notfound_ok            :: boolean() | 0 | 1 | undefined, % = 21
         backend                :: binary() | undefined, % = 22
         search                 :: boolean() | 0 | 1 | undefined, % = 23
         repl                   :: 'FALSE' | 'REALTIME' | 'FULLSYNC' | 'TRUE' | integer() | undefined, % = 24, enum RpbBucketProps.RpbReplMode
         search_index           :: binary() | undefined, % = 25
         datatype               :: binary() | undefined, % = 26
         consistent             :: boolean() | 0 | 1 | undefined, % = 27
         write_once             :: boolean() | 0 | 1 | undefined, % = 28
         hll_precision          :: non_neg_integer() | undefined, % = 29, 32 bits
         ttl                    :: non_neg_integer() | undefined % = 30, 32 bits
        }).
-endif.

-ifndef('RPBRESETBUCKETREQ_PB_H').
-define('RPBRESETBUCKETREQ_PB_H', true).
-record(rpbresetbucketreq,
        {bucket                 :: binary(),        % = 1
         type                   :: binary() | undefined % = 2
        }).
-endif.

-ifndef('RPBCSBUCKETREQ_PB_H').
-define('RPBCSBUCKETREQ_PB_H', true).
-record(rpbcsbucketreq,
        {bucket                 :: binary(),        % = 1
         start_key              :: binary(),        % = 2
         end_key                :: binary() | undefined, % = 3
         start_incl = true      :: boolean() | 0 | 1 | undefined, % = 4
         end_incl = false       :: boolean() | 0 | 1 | undefined, % = 5
         continuation           :: binary() | undefined, % = 6
         max_results            :: non_neg_integer() | undefined, % = 7, 32 bits
         timeout                :: non_neg_integer() | undefined, % = 8, 32 bits
         type                   :: binary() | undefined, % = 9
         cover_context          :: binary() | undefined % = 10
        }).
-endif.

-ifndef('RPBSETCLIENTIDREQ_PB_H').
-define('RPBSETCLIENTIDREQ_PB_H', true).
-record(rpbsetclientidreq,
        {client_id              :: binary()         % = 1
        }).
-endif.

-ifndef('RPBCOUNTERUPDATEREQ_PB_H').
-define('RPBCOUNTERUPDATEREQ_PB_H', true).
-record(rpbcounterupdatereq,
        {bucket                 :: binary(),        % = 1
         key                    :: binary(),        % = 2
         amount                 :: integer(),       % = 3, 32 bits
         w                      :: non_neg_integer() | undefined, % = 4, 32 bits
         dw                     :: non_neg_integer() | undefined, % = 5, 32 bits
         pw                     :: non_neg_integer() | undefined, % = 6, 32 bits
         returnvalue            :: boolean() | 0 | 1 | undefined % = 7
        }).
-endif.

-ifndef('RPBLISTBUCKETSREQ_PB_H').
-define('RPBLISTBUCKETSREQ_PB_H', true).
-record(rpblistbucketsreq,
        {timeout                :: non_neg_integer() | undefined, % = 1, 32 bits
         stream                 :: boolean() | 0 | 1 | undefined, % = 2
         type                   :: binary() | undefined % = 3
        }).
-endif.

-ifndef('RPBBUCKETKEYPREFLISTITEM_PB_H').
-define('RPBBUCKETKEYPREFLISTITEM_PB_H', true).
-record(rpbbucketkeypreflistitem,
        {partition              :: integer(),       % = 1, 32 bits
         node                   :: binary(),        % = 2
         primary                :: boolean() | 0 | 1 % = 3
        }).
-endif.

-ifndef('RPBGETBUCKETKEYPREFLISTRESP_PB_H').
-define('RPBGETBUCKETKEYPREFLISTRESP_PB_H', true).
-record(rpbgetbucketkeypreflistresp,
        {preflist = []          :: [#rpbbucketkeypreflistitem{}] % = 1
        }).
-endif.

-ifndef('RPBLISTBUCKETSRESP_PB_H').
-define('RPBLISTBUCKETSRESP_PB_H', true).
-record(rpblistbucketsresp,
        {buckets = []           :: [binary()],      % = 1
         done                   :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('RPBPUTRESP_PB_H').
-define('RPBPUTRESP_PB_H', true).
-record(rpbputresp,
        {content = []           :: [#rpbcontent{}], % = 1
         vclock                 :: binary() | undefined, % = 2
         key                    :: binary() | undefined % = 3
        }).
-endif.

-ifndef('RPBGETCLIENTIDRESP_PB_H').
-define('RPBGETCLIENTIDRESP_PB_H', true).
-record(rpbgetclientidresp,
        {client_id              :: binary()         % = 1
        }).
-endif.

-ifndef('RPBCOVERAGEENTRY_PB_H').
-define('RPBCOVERAGEENTRY_PB_H', true).
-record(rpbcoverageentry,
        {ip                     :: binary(),        % = 1
         port                   :: non_neg_integer(), % = 2, 32 bits
         keyspace_desc          :: binary() | undefined, % = 3
         cover_context          :: binary()         % = 4
        }).
-endif.

-ifndef('RPBSETBUCKETTYPEREQ_PB_H').
-define('RPBSETBUCKETTYPEREQ_PB_H', true).
-record(rpbsetbuckettypereq,
        {type                   :: binary(),        % = 1
         props                  :: #rpbbucketprops{} % = 2
        }).
-endif.

-ifndef('RPBGETBUCKETTYPEREQ_PB_H').
-define('RPBGETBUCKETTYPEREQ_PB_H', true).
-record(rpbgetbuckettypereq,
        {type                   :: binary()         % = 1
        }).
-endif.

-ifndef('RPBDELREQ_PB_H').
-define('RPBDELREQ_PB_H', true).
-record(rpbdelreq,
        {bucket                 :: binary(),        % = 1
         key                    :: binary(),        % = 2
         rw                     :: non_neg_integer() | undefined, % = 3, 32 bits
         vclock                 :: binary() | undefined, % = 4
         r                      :: non_neg_integer() | undefined, % = 5, 32 bits
         w                      :: non_neg_integer() | undefined, % = 6, 32 bits
         pr                     :: non_neg_integer() | undefined, % = 7, 32 bits
         pw                     :: non_neg_integer() | undefined, % = 8, 32 bits
         dw                     :: non_neg_integer() | undefined, % = 9, 32 bits
         timeout                :: non_neg_integer() | undefined, % = 10, 32 bits
         sloppy_quorum          :: boolean() | 0 | 1 | undefined, % = 11
         n_val                  :: non_neg_integer() | undefined, % = 12, 32 bits
         type                   :: binary() | undefined % = 13
        }).
-endif.

-ifndef('RPBPUTREQ_PB_H').
-define('RPBPUTREQ_PB_H', true).
-record(rpbputreq,
        {bucket                 :: binary(),        % = 1
         key                    :: binary() | undefined, % = 2
         vclock                 :: binary() | undefined, % = 3
         content                :: #rpbcontent{},   % = 4
         w                      :: non_neg_integer() | undefined, % = 5, 32 bits
         dw                     :: non_neg_integer() | undefined, % = 6, 32 bits
         return_body            :: boolean() | 0 | 1 | undefined, % = 7
         pw                     :: non_neg_integer() | undefined, % = 8, 32 bits
         if_not_modified        :: boolean() | 0 | 1 | undefined, % = 9
         if_none_match          :: boolean() | 0 | 1 | undefined, % = 10
         return_head            :: boolean() | 0 | 1 | undefined, % = 11
         timeout                :: non_neg_integer() | undefined, % = 12, 32 bits
         asis                   :: boolean() | 0 | 1 | undefined, % = 13
         sloppy_quorum          :: boolean() | 0 | 1 | undefined, % = 14
         n_val                  :: non_neg_integer() | undefined, % = 15, 32 bits
         type                   :: binary() | undefined % = 16
        }).
-endif.

-ifndef('RPBGETREQ_PB_H').
-define('RPBGETREQ_PB_H', true).
-record(rpbgetreq,
        {bucket                 :: binary(),        % = 1
         key                    :: binary(),        % = 2
         r                      :: non_neg_integer() | undefined, % = 3, 32 bits
         pr                     :: non_neg_integer() | undefined, % = 4, 32 bits
         basic_quorum           :: boolean() | 0 | 1 | undefined, % = 5
         notfound_ok            :: boolean() | 0 | 1 | undefined, % = 6
         if_modified            :: binary() | undefined, % = 7
         head                   :: boolean() | 0 | 1 | undefined, % = 8
         deletedvclock          :: boolean() | 0 | 1 | undefined, % = 9
         timeout                :: non_neg_integer() | undefined, % = 10, 32 bits
         sloppy_quorum          :: boolean() | 0 | 1 | undefined, % = 11
         n_val                  :: non_neg_integer() | undefined, % = 12, 32 bits
         type                   :: binary() | undefined % = 13
        }).
-endif.

-ifndef('RPBGETBUCKETKEYPREFLISTREQ_PB_H').
-define('RPBGETBUCKETKEYPREFLISTREQ_PB_H', true).
-record(rpbgetbucketkeypreflistreq,
        {bucket                 :: binary(),        % = 1
         key                    :: binary(),        % = 2
         type                   :: binary() | undefined % = 3
        }).
-endif.

-ifndef('RPBINDEXRESP_PB_H').
-define('RPBINDEXRESP_PB_H', true).
-record(rpbindexresp,
        {keys = []              :: [binary()],      % = 1
         results = []           :: [#rpbpair{}],    % = 2
         continuation           :: binary() | undefined, % = 3
         done                   :: boolean() | 0 | 1 | undefined % = 4
        }).
-endif.

-ifndef('RPBGETSERVERINFORESP_PB_H').
-define('RPBGETSERVERINFORESP_PB_H', true).
-record(rpbgetserverinforesp,
        {node                   :: binary() | undefined, % = 1
         server_version         :: binary() | undefined % = 2
        }).
-endif.

-ifndef('RPBCSBUCKETRESP_PB_H').
-define('RPBCSBUCKETRESP_PB_H', true).
-record(rpbcsbucketresp,
        {objects = []           :: [#rpbindexobject{}], % = 1
         continuation           :: binary() | undefined, % = 2
         done                   :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('RPBMAPREDRESP_PB_H').
-define('RPBMAPREDRESP_PB_H', true).
-record(rpbmapredresp,
        {phase                  :: non_neg_integer() | undefined, % = 1, 32 bits
         response               :: binary() | undefined, % = 2
         done                   :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('RPBCOVERAGEREQ_PB_H').
-define('RPBCOVERAGEREQ_PB_H', true).
-record(rpbcoveragereq,
        {type                   :: binary() | undefined, % = 1
         bucket                 :: binary(),        % = 2
         min_partitions         :: non_neg_integer() | undefined, % = 3, 32 bits
         replace_cover          :: binary() | undefined, % = 4
         unavailable_cover = [] :: [binary()]       % = 5
        }).
-endif.

-ifndef('RPBSETBUCKETREQ_PB_H').
-define('RPBSETBUCKETREQ_PB_H', true).
-record(rpbsetbucketreq,
        {bucket                 :: binary(),        % = 1
         props                  :: #rpbbucketprops{}, % = 2
         type                   :: binary() | undefined % = 3
        }).
-endif.

-ifndef('RPBGETBUCKETREQ_PB_H').
-define('RPBGETBUCKETREQ_PB_H', true).
-record(rpbgetbucketreq,
        {bucket                 :: binary(),        % = 1
         type                   :: binary() | undefined % = 2
        }).
-endif.

-ifndef('RPBLISTKEYSRESP_PB_H').
-define('RPBLISTKEYSRESP_PB_H', true).
-record(rpblistkeysresp,
        {keys = []              :: [binary()],      % = 1
         done                   :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('RPBINDEXREQ_PB_H').
-define('RPBINDEXREQ_PB_H', true).
-record(rpbindexreq,
        {bucket                 :: binary(),        % = 1
         index                  :: binary(),        % = 2
         qtype                  :: 'eq' | 'range' | integer(), % = 3, enum RpbIndexReq.IndexQueryType
         key                    :: binary() | undefined, % = 4
         range_min              :: binary() | undefined, % = 5
         range_max              :: binary() | undefined, % = 6
         return_terms           :: boolean() | 0 | 1 | undefined, % = 7
         stream                 :: boolean() | 0 | 1 | undefined, % = 8
         max_results            :: non_neg_integer() | undefined, % = 9, 32 bits
         continuation           :: binary() | undefined, % = 10
         timeout                :: non_neg_integer() | undefined, % = 11, 32 bits
         type                   :: binary() | undefined, % = 12
         term_regex             :: binary() | undefined, % = 13
         pagination_sort        :: boolean() | 0 | 1 | undefined, % = 14
         cover_context          :: binary() | undefined, % = 15
         return_body            :: boolean() | 0 | 1 | undefined % = 16
        }).
-endif.

-ifndef('RPBCOUNTERGETREQ_PB_H').
-define('RPBCOUNTERGETREQ_PB_H', true).
-record(rpbcountergetreq,
        {bucket                 :: binary(),        % = 1
         key                    :: binary(),        % = 2
         r                      :: non_neg_integer() | undefined, % = 3, 32 bits
         pr                     :: non_neg_integer() | undefined, % = 4, 32 bits
         basic_quorum           :: boolean() | 0 | 1 | undefined, % = 5
         notfound_ok            :: boolean() | 0 | 1 | undefined % = 6
        }).
-endif.

-ifndef('RPBLISTKEYSREQ_PB_H').
-define('RPBLISTKEYSREQ_PB_H', true).
-record(rpblistkeysreq,
        {bucket                 :: binary(),        % = 1
         timeout                :: non_neg_integer() | undefined, % = 2, 32 bits
         type                   :: binary() | undefined % = 3
        }).
-endif.

-ifndef('RPBAUTHREQ_PB_H').
-define('RPBAUTHREQ_PB_H', true).
-record(rpbauthreq,
        {user                   :: binary(),        % = 1
         password               :: binary()         % = 2
        }).
-endif.

-ifndef('RPBMAPREDREQ_PB_H').
-define('RPBMAPREDREQ_PB_H', true).
-record(rpbmapredreq,
        {request                :: binary(),        % = 1
         content_type           :: binary()         % = 2
        }).
-endif.

-ifndef('RPBCOUNTERUPDATERESP_PB_H').
-define('RPBCOUNTERUPDATERESP_PB_H', true).
-record(rpbcounterupdateresp,
        {value                  :: integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('RPBGETBUCKETRESP_PB_H').
-define('RPBGETBUCKETRESP_PB_H', true).
-record(rpbgetbucketresp,
        {props                  :: #rpbbucketprops{} % = 1
        }).
-endif.

-ifndef('RPBCOUNTERGETRESP_PB_H').
-define('RPBCOUNTERGETRESP_PB_H', true).
-record(rpbcountergetresp,
        {value                  :: integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('RPBINDEXBODYRESP_PB_H').
-define('RPBINDEXBODYRESP_PB_H', true).
-record(rpbindexbodyresp,
        {objects = []           :: [#rpbindexobject{}], % = 1
         continuation           :: binary() | undefined, % = 2
         done                   :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('RPBCOVERAGERESP_PB_H').
-define('RPBCOVERAGERESP_PB_H', true).
-record(rpbcoverageresp,
        {entries = []           :: [#rpbcoverageentry{}] % = 1
        }).
-endif.

-ifndef('RPBERRORRESP_PB_H').
-define('RPBERRORRESP_PB_H', true).
-record(rpberrorresp,
        {errmsg                 :: binary(),        % = 1
         errcode                :: non_neg_integer() % = 2, 32 bits
        }).
-endif.

-endif.
